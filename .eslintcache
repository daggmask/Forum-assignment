[{"C:\\Programming_school\\forum-assignment\\src\\index.js":"1","C:\\Programming_school\\forum-assignment\\src\\App.js":"2","C:\\Programming_school\\forum-assignment\\src\\context\\userContext.js":"3","C:\\Programming_school\\forum-assignment\\src\\pages\\header.js":"4","C:\\Programming_school\\forum-assignment\\src\\pages\\home.js":"5","C:\\Programming_school\\forum-assignment\\src\\users\\loginModal.js":"6","C:\\Programming_school\\forum-assignment\\src\\posts\\postList.js":"7","C:\\Programming_school\\forum-assignment\\src\\posts\\postView.js":"8","C:\\Programming_school\\forum-assignment\\src\\posts\\postCreation.js":"9","C:\\Programming_school\\forum-assignment\\src\\context\\postContext.js":"10","C:\\Programming_school\\forum-assignment\\src\\posts\\postFilterButton.js":"11","C:\\Programming_school\\forum-assignment\\src\\users\\userCreation.js":"12","C:\\Programming_school\\forum-assignment\\src\\helpers\\helpers.js":"13","C:\\Programming_school\\forum-assignment\\src\\posts\\postPage.js":"14","C:\\Programming_school\\forum-assignment\\src\\posts\\comments.js":"15"},{"size":237,"mtime":1608401420880,"results":"16","hashOfConfig":"17"},{"size":994,"mtime":1609750585488,"results":"18","hashOfConfig":"17"},{"size":405,"mtime":1609352409098,"results":"19","hashOfConfig":"17"},{"size":1775,"mtime":1609748666684,"results":"20","hashOfConfig":"17"},{"size":212,"mtime":1608401420880,"results":"21","hashOfConfig":"17"},{"size":3852,"mtime":1609924755688,"results":"22","hashOfConfig":"17"},{"size":1377,"mtime":1609924709781,"results":"23","hashOfConfig":"17"},{"size":893,"mtime":1609757710003,"results":"24","hashOfConfig":"17"},{"size":3755,"mtime":1609925950531,"results":"25","hashOfConfig":"17"},{"size":495,"mtime":1609750871334,"results":"26","hashOfConfig":"17"},{"size":929,"mtime":1609924423899,"results":"27","hashOfConfig":"17"},{"size":3494,"mtime":1609756477947,"results":"28","hashOfConfig":"17"},{"size":562,"mtime":1609755487592,"results":"29","hashOfConfig":"17"},{"size":3790,"mtime":1609757513854,"results":"30","hashOfConfig":"17"},{"size":990,"mtime":1609758249942,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"jlut5y",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"C:\\Programming_school\\forum-assignment\\src\\index.js",[],["68","69"],"C:\\Programming_school\\forum-assignment\\src\\App.js",[],"C:\\Programming_school\\forum-assignment\\src\\context\\userContext.js",["70"],"import React, { createContext, useState} from \"react\";\r\n\r\nexport const UserContext = createContext();\r\n\r\nconst UserContextProvider = (props) => {\r\n  const [user, setUser] = useState(null);\r\n\r\n  const values = {\r\n    user,\r\n    // fetchUser,\r\n    setUser,\r\n  };\r\n\r\n  return (\r\n    <UserContext.Provider value={values}>{props.children}</UserContext.Provider>\r\n  );\r\n};\r\nexport default UserContextProvider;\r\n","C:\\Programming_school\\forum-assignment\\src\\pages\\header.js",["71"],"import React, { useState } from \"react\";\r\nimport { withRouter, useHistory } from \"react-router-dom\";\r\nimport {\r\n  Navbar,\r\n  NavbarBrand,\r\n  NavItem,\r\n  NavLink,\r\n  Nav,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport LoginModal from '../users/loginModal'\r\nimport PostCreation from '../posts/postCreation'\r\n\r\n\r\nconst ForumHeader = (props) => {\r\n  const [modalIsOpen, setModalIsOpen] = useState(false);\r\n  let history = useHistory();\r\n\r\n  const goToHomePage = () => {\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const goToMyPage = () => {\r\n    history.push(\"/mypage\");\r\n  };\r\n\r\n  const toggleModal = () => {\r\n    setModalIsOpen(!modalIsOpen);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Navbar className=\"light-grey-background mb-3\" expand=\"lg\">\r\n        <NavbarBrand className=\"text-light pointer\" onClick={goToHomePage}>\r\n          <h3 className=\"my-auto ml-1 p-2\">\r\n            Forum\r\n            <span className=\"orange-background forum-white borderRadius ml-1\">\r\n              Hub\r\n            </span>\r\n          </h3>\r\n        </NavbarBrand>\r\n\r\n          <Nav navbar>\r\n            <NavItem>\r\n              <NavLink className=\"forum-grey text-light pointer\" onClick={goToHomePage}>\r\n                <Button className=\"forum-button\">Home</Button>\r\n              </NavLink>\r\n            </NavItem>\r\n            <>\r\n              <NavItem className=\"forum-grey\" onClick={() => toggleModal}>\r\n                <NavLink className=\"forum-grey pointer\">\r\n                  <LoginModal/>\r\n                </NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink>\r\n                  <PostCreation/>\r\n                </NavLink>\r\n              </NavItem>\r\n            </>\r\n          </Nav>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(ForumHeader);\r\n","C:\\Programming_school\\forum-assignment\\src\\pages\\home.js",["72"],"import { Button } from 'reactstrap'\r\nimport React from 'react'\r\nimport PostList from '../posts/postList'\r\n\r\nconst Home = () => {\r\n\r\n  return(\r\n    <div>\r\n      <PostList/>\r\n    </div>\r\n  )\r\n}\r\nexport default Home","C:\\Programming_school\\forum-assignment\\src\\users\\loginModal.js",["73"],"C:\\Programming_school\\forum-assignment\\src\\posts\\postList.js",[],"C:\\Programming_school\\forum-assignment\\src\\posts\\postView.js",[],"C:\\Programming_school\\forum-assignment\\src\\posts\\postCreation.js",["74"],"C:\\Programming_school\\forum-assignment\\src\\context\\postContext.js",[],"C:\\Programming_school\\forum-assignment\\src\\posts\\postFilterButton.js",[],"C:\\Programming_school\\forum-assignment\\src\\users\\userCreation.js",["75","76"],"import React, { useEffect, useState, useContext } from \"react\";\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Input, Label } from \"reactstrap\";\r\n\r\nconst UserCreation = ({doLogin}) => {\r\n\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [errorMessageShown, setErrorMessageShown] = useState(false);\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const toggle = () => setModal(!modal);\r\n\r\n  const registerUser = async () => {\r\n    const credentials = {username: username, password: password, userRole: \"basicUser\"}\r\n    await fetch(\"/api/users\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(credentials),\r\n    })\r\n      .then((res) => res.json()\r\n        & setModal(false)\r\n        & setErrorMessageShown(false)\r\n        & doLogin())\r\n      .catch((error) => console.error(error));\r\n  }\r\n\r\n  return(\r\n    <div>\r\n      <div className=\"text-center m-4\" onClick={toggle}>\r\n        <p className=\"font-italic mb-0\">Don't have an account?</p>\r\n        <p className=\"font-italic\">\r\n          {\" \"}\r\n          Register{\" \"}\r\n          <span className=\"text-primary click-text inline\">\r\n            <span>here</span>\r\n          </span>\r\n        </p>\r\n      </div>\r\n      <Modal isOpen={modal} toggle={toggle}>\r\n        <ModalHeader className=\"text-center mx-auto\">Register</ModalHeader>\r\n        <ModalBody>\r\n          <Form>\r\n            <FormGroup className=\"col-xs-8 col-sm-12 col-md-12 col-lg-12 m-0\">\r\n              <Label\r\n                for=\"emailAddress\"\r\n                className=\"forum-dark-grey font-weight-bold col-12\"\r\n              >\r\n                Username\r\n              </Label>\r\n              <Input\r\n                required\r\n                className=\"light-light-grey-background forum-input\"\r\n                type=\"text\"\r\n                placeholder=\"Username...\"\r\n                value={username}\r\n                onChange={(e) => setUsername(e.target.value)}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup className=\"col-xs-8 col-sm-12 col-md-12 col-lg-12 mt-2\">\r\n              <Label\r\n             for=\"password\"\r\n              className=\"forum-dark-grey font-weight-bold col-12\"\r\n            >\r\n              Lösenord\r\n            </Label>\r\n             <Input\r\n                required\r\n                className=\"light-light-grey-background forum-input col-10 noBorder\"\r\n                type=\"password\"\r\n                placeholder=\"Password...\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              />\r\n            <FormGroup className=\"col-xs-8 col-sm-12 col-md-12 col-lg-12 mt-2\">\r\n              {errorMessageShown ? (\r\n                <div className=\"error-text mb-2 text-center font-weight-bold\">\r\n                  Invalid username or password{\" \"}\r\n                </div>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n              <Button className=\"forum-button col-xs-8 col-sm-12 col-md-12 col-lg-12 font-weight-bold\" onClick={() => registerUser()}>\r\n                Register\r\n              </Button>\r\n            </FormGroup>\r\n            </FormGroup>\r\n          </Form>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button className=\"forum-button\" onClick={toggle}>\r\n            Cancel\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default UserCreation","C:\\Programming_school\\forum-assignment\\src\\helpers\\helpers.js",[],"C:\\Programming_school\\forum-assignment\\src\\posts\\postPage.js",["77"],"import React, { useEffect, useState, useContext } from 'react'\r\nimport { Card, Button, CardTitle, CardText, Form, Input, FormGroup, Label } from 'reactstrap';\r\nimport {PostContext} from '../context/postContext'\r\nimport {UserContext} from \"../context/userContext\"\r\nimport {getDatePosted} from '../helpers/helpers'\r\nimport Comments from './comments'\r\n\r\nconst PostPage = () => {\r\n\r\nconst {selectedPost} = useContext(PostContext)\r\nconst {user} = useContext(UserContext)\r\n\r\nconst [commentPost, setCommentPost] = useState(\"\")\r\nconst [comments, setComments] = useState([])\r\nconst [editPressed, setEditPressed] = useState(false)\r\nconst [postTitle, setPostTitle] = useState(selectedPost.title)\r\nconst [postContent, setPostContent] = useState(selectedPost.content)\r\n\r\nlet condition = user ? selectedPost.creatorId === user.id : false\r\n\r\nconst saveChanges = async () => {\r\n  let updatedPost = Object.assign({},selectedPost)\r\n  updatedPost.title = postTitle\r\n  updatedPost.content = postContent\r\n\r\n  await fetch(\"/api/posts/\" + selectedPost.id, {\r\n    method: \"PUT\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify(updatedPost),\r\n  })\r\n  .then((res) => res.json())\r\n  .then(() => setEditPressed(false))\r\n  .catch((error) => console.error(error));\r\n  //Trigger render on posts\r\n}\r\n\r\nconst getPostsComments = async () => {\r\n  await fetch(\"/api/comments/\" + selectedPost.id)\r\n    .then((res) => res.json())\r\n    .then((data) => setComments(data) & setCommentPost(\"\"))\r\n    .catch((error) => console.error(error))\r\n}\r\n\r\nconst postComment = async () => {\r\n  let commentCredentials = {post: selectedPost.id, user: user.username, userId: user.id, content: commentPost, timePosted: new Date().getTime()}\r\n  console.log(commentCredentials);\r\n  await fetch(\"/api/comments\",{\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify(commentCredentials),\r\n  })\r\n  .then((res) => res.json() & getPostsComments())\r\n  .catch((error) => console.error(error))\r\n}\r\n\r\nuseEffect(() => {\r\n  getPostsComments()\r\n  console.log(\"Here\");\r\n  return () => {\r\n    setCommentPost(\"\")\r\n    setComments([])\r\n  }\r\n}, [])\r\n\r\n  return(\r\n    <div>\r\n        <Card body className=\"orange-background\">\r\n          <CardTitle className=\"mx-auto\"><h4>\r\n            {editPressed ? \r\n        <Input value={postTitle} onChange={(e) => setPostTitle(e.target.value)}></Input>\r\n        : postTitle}</h4>\r\n        </CardTitle>\r\n          <CardTitle className=\"mx-auto\"><h6>Posted: {getDatePosted(selectedPost.timePosted)}</h6></CardTitle>\r\n        <CardText className=\"mx-auto\"> \r\n        {editPressed ?\r\n          <Input type=\"textarea\" value={postContent} onChange={(e) => setPostContent(e.target.value)}></Input>\r\n          : postContent}\r\n          </CardText>\r\n        {editPressed ? <Button className=\"forum-button-dark m-2 col-4 mx-auto\" onClick={() => saveChanges()}>\r\n            Save\r\n          </Button> : null}\r\n        {condition ?\r\n        <Button className=\" m-2 col-4 mx-auto\" onClick={() => setEditPressed(!editPressed)}>\r\n            Edit\r\n          </Button>\r\n           : null}\r\n        </Card>\r\n        <div className=\"container\">\r\n        {user ? \r\n          <Form>\r\n          <FormGroup className=\"col-6 mx-auto\">\r\n            <Label for=\"postContent\">Comment</Label>\r\n            <Input type=\"textarea\" placeholder=\"Enter comment...\" value={commentPost} onChange={(e) => setCommentPost(e.target.value)} />\r\n            <Button className=\"forum-button col-12 mt-2 mb-4\" onClick={() => postComment()}>Comment</Button>\r\n            </FormGroup>\r\n          </Form>\r\n            :<h6 className=\"forum-dark-grey text-center m-4\">Login to comment</h6> }\r\n        </div> \r\n        <Comments comments={comments}/>\r\n    </div>\r\n  )\r\n} \r\nexport default PostPage","C:\\Programming_school\\forum-assignment\\src\\posts\\comments.js",[],{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":1,"column":53,"nodeType":"84","messageId":"85","endLine":1,"endColumn":63},{"ruleId":"82","severity":1,"message":"86","line":23,"column":9,"nodeType":"84","messageId":"85","endLine":23,"endColumn":19},{"ruleId":"82","severity":1,"message":"87","line":1,"column":10,"nodeType":"84","messageId":"85","endLine":1,"endColumn":16},{"ruleId":"82","severity":1,"message":"88","line":1,"column":17,"nodeType":"84","messageId":"85","endLine":1,"endColumn":26},{"ruleId":"82","severity":1,"message":"88","line":1,"column":40,"nodeType":"84","messageId":"85","endLine":1,"endColumn":49},{"ruleId":"82","severity":1,"message":"88","line":1,"column":17,"nodeType":"84","messageId":"85","endLine":1,"endColumn":26},{"ruleId":"82","severity":1,"message":"83","line":1,"column":38,"nodeType":"84","messageId":"85","endLine":1,"endColumn":48},{"ruleId":"89","severity":1,"message":"90","line":63,"column":4,"nodeType":"91","endLine":63,"endColumn":6,"suggestions":"92"},"no-native-reassign",["93"],"no-negated-in-lhs",["94"],"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'goToMyPage' is assigned a value but never used.","'Button' is defined but never used.","'useEffect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getPostsComments'. Either include it or remove the dependency array.","ArrayExpression",["95"],"no-global-assign","no-unsafe-negation",{"desc":"96","fix":"97"},"Update the dependencies array to be: [getPostsComments]",{"range":"98","text":"99"},[2149,2151],"[getPostsComments]"]